{"version":3,"file":"vue.js","sources":["../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["\n// 匹配标签名：aa-xxx\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// 命名空间标签：aa:aa-xxx\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// 匹配标签名(索引1)：<aa:aa-xxx\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n// 匹配标签名(索引1)：</aa:aa-xxxdsadsa> \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\n// 匹配属性（索引 1 为属性 key、索引 3、4、5 其中一直为属性值）：aaa=\"xxx\"、aaa='xxx'、aaa=xxx\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// 匹配结束标签：> 或 />\nconst startTagClose = /^\\s*(\\/?)>/;\n// 匹配 {{   xxx    }} ，匹配到 xxx\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parserHTML(html) {\n  console.log(\"***** 进入 parserHTML：将模板编译成 AST 语法树 *****\")\n  let stack = [];\n  let root = null;\n  // 构建父子关系\n  function createASTElement(tag, attrs, parent) {\n    return {\n      tag,  // 标签名\n      type:1, // 元素类型为 1\n      children:[],  // 儿子\n      parent, // 父亲\n      attrs // 属性\n    }\n  }\n  // 开始标签,如:[div,p]\n  function start(tag, attrs) {\n    console.log(\"发射匹配到的开始标签-start,tag = \" + tag + \",attrs = \" + JSON.stringify(attrs))\n    // 遇到开始标签，就取栈中最后一个，作为父节点\n    let parent = stack[stack.length-1];\n    let element = createASTElement(tag, attrs, parent);\n    // 还没有根节点时，作为根节点\n    if(root == null) root = element;\n    if(parent){ // 父节点存在\n      element.parent = parent;  // 为当前节点设置父节点\n      parent.children.push(element) // 同时，当前节点也称为父节点的子节点\n    }\n    stack.push(element)\n  }\n  // 结束标签\n  function end(tagName) {\n    console.log(\"发射匹配到的结束标签-end,tagName = \" + tagName)\n    // 如果是结束标签，就从栈中抛出\n    let endTag = stack.pop();\n    // check:抛出的结束标签名与当前结束标签名是否一直\n    if(endTag.tag != tagName)console.log(\"标签出错\")\n  }\n  // 文本\n  function text(chars) {\n    console.log(\"发射匹配到的文本-text,chars = \" + chars)\n    // 文本直接放到前一个中 注意：文本可能有空白字符\n    let parent = stack[stack.length-1];\n    chars = chars.replace(/\\s/g, \"\"); // 将空格替换为空，即删除空格\n    if(chars){\n      parent.children.push({\n        type:2, // 文本类型为 2\n        text:chars,\n      })\n    }\n  }\n  /**\n   * 截取字符串\n   * @param {*} len 截取长度\n   */\n  function advance(len) {\n    html = html.substring(len);\n    console.log(\"截取匹配内容后的 html:\" + html)\n    console.log(\"===============================\")\n  }\n\n  /**\n   * 匹配开始标签,返回匹配结果\n   */\n  function parseStartTag() {\n    console.log(\"***** 进入 parseStartTag，尝试解析开始标签，当前 html： \" + html + \"*****\")\n    // 匹配开始标签，开始标签名为索引 1\n    const start = html.match(startTagOpen);\n    if(start){// 匹配到开始标签再处理\n      // 构造匹配结果，包含：标签名 + 属性\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      console.log(\"html.match(startTagOpen) 结果:\" + JSON.stringify(match))\n      // 截取匹配到的结果\n      advance(start[0].length)\n      let end;  // 是否匹配到开始标签的结束符号>或/>\n      let attr; // 存储属性匹配的结果\n      // 匹配属性且不能为开始的结束标签，例如：<div>，到>就已经结束了，不再继续匹配该标签内的属性\n      //    attr = html.match(attribute)  匹配属性并赋值当前属性的匹配结果\n      //    !(end = html.match(startTagClose))   没有匹配到开始标签的关闭符号>或/>\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        // 将匹配到的属性,push到attrs数组中，匹配到关闭符号>,while 就结束\n        console.log(\"匹配到属性 attr = \" + JSON.stringify(attr))\n        // console.log(\"匹配到属性 name = \" + attr[1] + \"value = \" + attr[3] || attr[4] || attr[5])\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n        advance(attr[0].length)// 截取匹配到的属性 xxx=xxx\n      }\n      // 匹配到关闭符号>,当前标签处理完成 while 结束,\n      // 此时，<div id=\"app\" 处理完成，需连同关闭符号>一起被截取掉\n      if (end) {\n        console.log(\"匹配关闭符号结果 html.match(startTagClose):\" + JSON.stringify(end))\n        advance(end[0].length)\n      }\n\n      // 开始标签处理完成后，返回匹配结果：tagName标签名 + attrs属性\n      console.log(\">>>>> 开始标签的匹配结果 startTagMatch = \" + JSON.stringify(match))\n      return match;\n    }\n    console.log(\"未匹配到开始标签，返回 false\")\n    console.log(\"===============================\")\n    return false;\n  }\n\n  // 对模板不停截取，直至全部解析完毕\n  while (html) {\n    // 解析标签和文本(看开头是否为<)\n    let index = html.indexOf('<');\n    if (index == 0) {// 标签\n      console.log(\"解析 html：\" + html + \",结果：是标签\")\n      // 如果是标签，继续解析开始标签和属性\n      const startTagMatch = parseStartTag();// 匹配开始标签，返回匹配结果\n      if (startTagMatch) {  // 匹配到了，说明是开始标签\n        // 匹配到开始标签，调用start方法，传递标签名和属性\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue; // 如果是开始标签，就不需要继续向下走了，继续 while 解析后面的部分\n      }\n      // 如果开始标签没有匹配到，有可能是结束标签 </div>\n      let endTagMatch;\n      if (endTagMatch = html.match(endTag)) {// 匹配到了，说明是结束标签\n        // 匹配到开始标签，调用start方法，传递标签名和属性\n        end(endTagMatch[1])\n        advance(endTagMatch[0].length)\n        continue; // 如果是结束标签，也不需要继续向下走了，继续 while 解析后面的部分\n      }\n    } else {// 文本\n      console.log(\"解析 html：\" + html + \",结果：是文本\")\n    }\n\n    // 文本：index > 0 \n    if(index > 0){\n      // 将文本取出来并发射出去,再从 html 中拿掉\n      let chars = html.substring(0,index) // hello</div>\n      text(chars);\n      advance(chars.length)\n    }\n  }\n  console.log(\"当前 template 模板，已全部解析完成\")\n  return root;\n}","import { parserHTML } from \"./parser\";\n\nexport function compileToFunction(template) {\n  console.log(\"***** 进入 compileToFunction：将 template 编译为 render 函数 *****\")\n  // 1，将模板变成 AST 语法树\n  let ast = parserHTML(template);\n  console.log(\"解析 HTML 返回 ast 语法树====>\")\n  console.log(ast)\n}","export function isFunction(val){\n  return typeof val == 'function'\n}\n\n/**\n * 判断是否是对象：类型是object，且不能为 null\n * @param {*} val \n * @returns \n */\nexport function isObject(val) {\n  return typeof val == 'object' && val !== null\n}\n\n/**\n * 判断是否是数组\n * @param {*} val \n * @returns \n */\nexport function isArray(val) {\n  return Array.isArray(val)\n}","// 重写数组方法\n// 思路：拿到原来的方法，将部分需要重写的方法重写掉\n\nlet oldArrayPrototype = Array.prototype;// 获取数组老的原型方法\n\n// 通过arrayMethods上的链能拿到数组上的原有方法\tarrayMethods.__proto__ == oldArrayPrototype\nexport let arrayMethods = Object.create(oldArrayPrototype);// 使arrayMethods可以通过__proto__，能获取到数组的方法\n\n// 重写这7个会导致数组发生变化的方法（影响原数组变化的方法，会影响到视图的更新）\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\n// 为arrayMethods添加这 7 个“重写方法”\n//  arrayMethods.push()  会在自己身上找到重写的push方法\n//  arrayMethods.concat() 自己身上没找到，回去链上找到原来的方法\n// 这种方式的好处：\n//  属性的查找会先在自己身上找，找不到再去原型上找，所以会优先调用重写的方法\n//  同时，只重写了 data 中数组原型的方法，不会影响到其他数组\n// 数组劫持的实现，因为只劫持了这7个方法，所以修改数组的索引和长度都不能触发视图更新\nmethods.forEach(method => {\n  // 当前的外部调用：arr.push\n  arrayMethods[method] = function (...args) {\n    console.log('数组的方法进行重写操作 method = ' + method)\n    // AOP:before 原生方法扩展... \n    // 调用数组原生方法逻辑（绑定到当前调用上下文）\n    oldArrayPrototype[method].call(this, ...args)\n    // AOP::after 原生方法扩展...\n\n    // 数组新增的属性如果是属性，要继续观测\n    // 哪些方法有增加数组的功能: splice push unshift\n    let inserted = null;\n    let ob = this.__ob__;\n    \n    switch (method) {\n      // arr.splice(0,0,100) 如果splice方法用于增加,一定有第三个参数,从第三个开始都是添加的内容\n      case 'splice':  // 修改 删除 添加\n        inserted = args.slice(2); // splice方法从第三个参数起是新增数据\n      case 'push':    // 向前增加\n      case 'unshift': // 向后增加\n        inserted = args // push、unshift的参数就是新增\n        break;\n    }\n\n    // observeArray：内部遍历inserted数组,调用observe方法，是对象就new Observer，继续深层观测\n    if(inserted)ob.observeArray(inserted);// inserted 有值就是数组\n  }\n});\n\n// 数组劫持的实现：劫持这 7个方法，所以修改索引和长度都是不能触发视图变化的","import { isArray, isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n\nexport function observe(value) {\n\n  // 1，如果 value 不是对象，说明写错了，就不需要观测了，直接 return\n  // 注意：数据也是 Object，这里就不做容错判断了，忽略使用错误传入数组的情况\n  if (!isObject(value)) {\n    return;\n  }\n\n  // 通过__ob__属性判断对象是否已经被观测，如果已经被观测，就不再重复观测了；\n  if(value.__ob__){\n    return;\n  }\n  // 2，对 对象 进行观测（最外层必须是一个object!不能是数组,Vue没有这种用法）\n  return new Observer(value);\n}\n\nclass Observer {\n\n  constructor(value) {\n    // value：为数组或对象添加自定义属性__ob__ = this，\n    // this：为当前 Observer 类的实例，实例上就有 observeArray 方法；\n    // value.__ob__ = this;\t// 可被遍历枚举，会造成死循环\n    // 定义__ob__ 属性为不可被枚举，防止对象在进入walk都继续defineProperty，造成死循环\n    Object.defineProperty(value, '__ob__', {\n      value:this,\n      enumerable:false  // 不可被枚举\n    });\n    // 对 value 是数组和对象的情况分开处理\n    if (isArray(value)) {\n      value.__proto__ = arrayMethods;  // 更改数组的原型方法\n      this.observeArray(value);\t// 数组的深层观测处理\n    } else {\n      // 如果value是对象，就循环对象，将对象中的属性使用Object.defineProperty重新定义一遍\n      this.walk(value); // 上来就走一步，这个方法的核心就是在循环对象\n    }\n  }\n\n  /**\n   * 遍历对象\n   *  循环data对象（不需要循环data原型上的方法），使用 Object.keys()\n   * @param {*} data \n   */\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      // 使用Object.defineProperty重新定义data对象中的属性\n      defineReactive(data, key, data[key]);\n    });\n  }\n\n  /**\n   * 遍历数组，对数组中的对象进行递归观测\n   *  1）[[]] 数组套数组\n   *  2）[{}] 数组套对象\n   * @param {*} data \n   */\n  observeArray(data) {\n    // observe方法内，如果是对象类型，继续 new Observer 进行递归处理\n    data.forEach(item => observe(item))\n  }\n}\n\n/**\n * 给对象Obj，定义属性key，值为value\n *  使用Object.defineProperty重新定义data对象中的属性\n *  由于Object.defineProperty性能低，所以vue2的性能瓶颈也在这里\n * @param {*} obj 需要定义属性的对象\n * @param {*} key 给对象定义的属性名\n * @param {*} value 给对象定义的属性值\n */\nfunction defineReactive(obj, key, value) {\n\n  observe(value);// 递归实现深层观测\n  Object.defineProperty(obj, key, {\n    // get方法构成闭包：取obj属性时需返回原值value，\n    // value会查找上层作用域的value，所以defineReactive函数不能被释放销毁\n    get() {\n      return value;\n    },\n    set(newValue) { // 确保新对象为响应式数据：如果新设置的值为对象，需要再次进行劫持\n      console.log(\"修改了被观测属性 key = \" + key + \", newValue = \" + JSON.stringify(newValue))\n      if (newValue === value) return\n      observe(newValue);  // observe方法：如果是对象，会 new Observer 深层观测\n      value = newValue;\n    }\n  })\n}\n","import { observe } from \"./observe\";\nimport { isFunction } from \"./utils\";\n\nexport function initState(vm) {\n    // 前面将 options 挂载到 vm.$options，这里直接可以拿到\n    const opts = vm.$options;\n\n    // 如果传了data，做数据的初始化\n    if (opts.data) {\n        initData(vm);\n    }\n    // 如果传了props，做操作...\n    // 如果传了watch，做操作...\n    // 如果传了computed，做操作...\n\n}\n\n/**\n * 代理方法\n *  当取 vm.key 时，将它代理到 vm._data上去取\n * @param {*} vm        vm 实例\n * @param {*} key       属性名\n * @param {*} source    代理目标，这里是vm._data\n */\nfunction Proxy(vm, key, source) {\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    console.log(\"进入 state.js - initData，数据初始化操作\")\n    let data = vm.$options.data;// 拿到 vue 初始化时，用户传入的data数据\n\n    // data 有可能是函数也有可能是对象，因此需要判断\n    //  如果 data 是函数，要拿到它的返回值，执行 data 函数并绑定 this 为 vm 实例\n    //  如果 data 不是函数，就是对象，不做处理\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n\n    // data 数据的响应式：遍历对象拿到所有属性，再通过Object.defineProperty 重写 data 中的所有属性  \n    // 在observe方法中new Observer执行后，数组的原型方法已完成重写,此时vm._data已经是响应式数据了\n    observe(data); // 观测数据\n    \n    // 当 vm.message 在 vm 实例上取值时，将它代理到vm._data上去取\n    for(let key in data){\n        Proxy(vm, key, '_data')\n    }\n}\n","import { compileToFunction } from \"./compiler\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  // 在Vue原型上扩展一个原型方法_init,进行vue初始化\n  Vue.prototype._init = function (options) {\n    const vm = this;  // this 指向当前 vue 实例\n    vm.$options = options; // 将 Vue 实例化时用户传入的options暴露到vm实例上\n\n    // 目前在 vue 实例化时，传入的 options 只有 el 和 data 两个参数\n    initState(vm);  // 状态的初始化\n\n    if (vm.$options.el) {\n      // 将数据挂在到页面上（此时,数据已经被劫持）\n      vm.$mount(vm.$options.el)\n    }\n  }\n\n  // 支持 new Vue({el}) 和 new Vue().$mount 两种情况\n  Vue.prototype.$mount = function (el) {\n    console.log(\"***** 进入 $mount，el = \" + el + \"*****\")\n    const vm = this;\n    const opts = vm.$options;\n    el = document.querySelector(el); // 获取真实的元素\n    vm.$el = el; // vm.$el 表示当前页面上的真实元素\n    console.log(\"获取真实的元素，el = \" + el)\n\n    // 如果没有 render, 看 template\n    if (!opts.render) {\n      console.log(\"options 中没有 render , 继续取 template\")\n      // 如果没有 template, 采用元素内容\n      let template = opts.template;\n      if (!template) {\n        console.log(\"options 中没有 template, 取 el.outerHTML = \" + el.outerHTML)\n        // 拿到整个元素标签,将模板编译为 render 函数\n        template = el.outerHTML;\n      }else{\n        console.log(\"options 中有 template = \" + template)\n      }\n\n      let render = compileToFunction(template);\n      console.log(\"打印 compileToFunction 返回的 render = \" + JSON.stringify(render))\n      opts.render = render;\n    }\n    // console.log(opts.render)\n  }\n}\n","import { initMixin } from \"./init\";\n\n/**\n * 在vue 中所有的功能都通过原型扩展（原型模式）的方式来添加\n * @param {*} options vue 实例化传入的配置对象\n */\nfunction Vue(options){\n    this._init(options);  // 调用Vue原型上的方法_init\n}\n\ninitMixin(Vue)\n\n// 导出 Vue 函数供外部使用\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","console","log","stack","root","createASTElement","tag","attrs","parent","type","children","start","JSON","stringify","length","element","push","end","tagName","pop","text","chars","replace","advance","len","substring","parseStartTag","match","attr","name","value","index","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","observe","Observer","constructor","defineProperty","enumerable","__proto__","walk","data","keys","key","defineReactive","item","obj","get","set","newValue","initState","vm","opts","$options","initData","Proxy","source","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","$el","render","outerHTML"],"mappings":"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"}