{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val){\n  return typeof val == 'function'\n}\n\n/**\n * 判断是否是对象：类型是object，且不能为 null\n * @param {*} val \n * @returns \n */\nexport function isObject(val) {\n  return typeof val == 'object' && val !== null\n}\n\n/**\n * 判断是否是数组\n * @param {*} val \n * @returns \n */\nexport function isArray(val) {\n  return Array.isArray(val)\n}","// 重写数组方法\n// 思路：拿到原来的方法，将部分需要重写的方法重写掉\n\nlet oldArrayPrototype = Array.prototype;// 获取数组老的原型方法\n\n// 通过arrayMethods上的链能拿到数组上的原有方法\tarrayMethods.__proto__ == oldArrayPrototype\nexport let arrayMethods = Object.create(oldArrayPrototype);// 使arrayMethods可以通过__proto__，能获取到数组的方法\n\n// 重写这7个会导致数组发生变化的方法（影响原数组变化的方法，会影响到视图的更新）\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\n// 为arrayMethods添加这 7 个“重写方法”\n//  arrayMethods.push()  会在自己身上找到重写的push方法\n//  arrayMethods.concat() 自己身上没找到，回去链上找到原来的方法\n// 这种方式的好处：\n//  属性的查找会先在自己身上找，找不到再去原型上找，所以会优先调用重写的方法\n//  同时，只重写了 data 中数组原型的方法，不会影响到其他数组\n// 数组劫持的实现，因为只劫持了这7个方法，所以修改数组的索引和长度都不能触发视图更新\nmethods.forEach(method => {\n  arrayMethods[method] = function () {\n    console.log('数组的方法进行重写操作 method = ' + method)\n  }\n});\nmethods.forEach(method => {\n  arrayMethods[method] = function () {\n    console.log('数组的方法进行重写操作 method = ' + method)\n  }\n});\n\n// 数组劫持的实现：劫持这 7个方法，所以修改索引和长度都是不能触发视图变化的","import { isArray, isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n\nexport function observe(value) {\n\n  // 1，如果 value 不是对象，说明写错了，就不需要观测了，直接 return\n  // 注意：数据也是 Object，这里就不做容错判断了，忽略使用错误传入数组的情况\n  if (!isObject(value)) {\n    return;\n  }\n\n  // 2，对 对象 进行观测（最外层必须是一个object!不能是数组,Vue没有这种用法）\n  return new Observer(value);\n}\n\nclass Observer {\n\n  constructor(value) {\n    // 对 value 是数组和对象的情况分开处理\n    if(isArray(value)){\n      value.__proto__ = arrayMethods;  // 更改数组的原型方法\n    }else{\n      // 如果value是对象，就循环对象，将对象中的属性使用Object.defineProperty重新定义一遍\n      this.walk(value); // 上来就走一步，这个方法的核心就是在循环对象\n    }\n  }\n\n  // 循环data对象（不需要循环data原型上的方法），使用 Object.keys()\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      // 使用Object.defineProperty重新定义data对象中的属性\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n\n/**\n * 给对象Obj，定义属性key，值为value\n *  使用Object.defineProperty重新定义data对象中的属性\n *  由于Object.defineProperty性能低，所以vue2的性能瓶颈也在这里\n * @param {*} obj 需要定义属性的对象\n * @param {*} key 给对象定义的属性名\n * @param {*} value 给对象定义的属性值\n */\nfunction defineReactive(obj, key, value) {\n\n  observe(value);// 递归实现深层观测\n  Object.defineProperty(obj, key, {\n    // get方法构成闭包：取obj属性时需返回原值value，\n    // value会查找上层作用域的value，所以defineReactive函数不能被释放销毁\n    get() {\n      return value;\n    },\n    set(newValue) {\n      if (newValue === value) return\n      value = newValue;\n    }\n  })\n}\n","import { observe } from \"./observe\";\nimport { isFunction } from \"./utils\";\n\nexport function initState(vm) {\n    // 前面将 options 挂载到 vm.$options，这里直接可以拿到\n    const opts = vm.$options;\n\n    // 如果传了data，做数据的初始化\n    if (opts.data) {\n        initData(vm);\n    }\n    // 如果传了props，做操作...\n    // 如果传了watch，做操作...\n    // 如果传了computed，做操作...\n\n}\n\n/**\n * 代理方法\n *  当取 vm.key 时，将它代理到 vm._data上去取\n * @param {*} vm        vm 实例\n * @param {*} key       属性名\n * @param {*} source    代理目标，这里是vm._data\n */\nfunction Proxy(vm, key, source) {\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    console.log(\"进入 state.js - initData，数据初始化操作\")\n    let data = vm.$options.data;// 拿到 vue 初始化时，用户传入的data数据\n\n    // data 有可能是函数也有可能是对象，因此需要判断\n    //  如果 data 是函数，要拿到它的返回值，执行 data 函数并绑定 this 为 vm 实例\n    //  如果 data 不是函数，就是对象，不做处理\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n\n    // data 数据的响应式：遍历对象拿到所有属性，再通过Object.defineProperty 重写 data 中的所有属性  \n    // 在observe方法中new Observer执行后，数组的原型方法已完成重写,此时vm._data已经是响应式数据了\n    observe(data); // 观测数据\n    \n    // 当 vm.message 在 vm 实例上取值时，将它代理到vm._data上去取\n    for(let key in data){\n        Proxy(vm, key, '_data')\n    }\n}\n","import { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  // 在Vue原型上扩展一个原型方法_init,进行vue初始化\n  Vue.prototype._init = function (options) {\n    const vm = this;  // this 指向当前 vue 实例\n    vm.$options = options; // 将 Vue 实例化时用户传入的options暴露到vm实例上\n\n    // 目前在 vue 实例化时，传入的 options 只有 el 和 data 两个参数\n    initState(vm);  // 状态的初始化\n\n    // 如果有 el，就需要data 数据渲染到视图上\n    if (vm.$options.el) {\n      console.log(\"有el,需要挂载\")\n    }\n  }\n}\n","import { initMixin } from \"./init\";\n\n/**\n * 在vue 中所有的功能都通过原型扩展（原型模式）的方式来添加\n * @param {*} options vue 实例化传入的配置对象\n */\nfunction Vue(options){\n    this._init(options);  // 调用Vue原型上的方法_init\n}\n\ninitMixin(Vue)\n\n// 导出 Vue 函数供外部使用\nexport default Vue;"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","observe","value","Observer","constructor","__proto__","walk","data","keys","key","defineReactive","obj","defineProperty","get","set","newValue","initState","vm","opts","$options","initData","Proxy","source","_data","call","initMixin","Vue","_init","options","el"],"mappings":"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"}